# -*- coding: utf-8 -*-
"""Copy of Word gussing game.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/19dRYZWn-azg1QO-Ixd5FBpIIN2ijkbvf
"""

import random

#Intializ the Game Setup
word_list = ["apple", "banana", "cherry", "date", "elderberry"]
difficulty_levels = {
    "Easy": {"word_length": 5, "attempts": 10},
    "Medium": {"word_length": 7, "attempts": 8},
    "Hard": {"word_length": 10, "attempts": 6}
}

#Defing the Game Logic
def play_game():
    difficulty = input("Choose a difficulty level (Easy, Medium, Hard): ")
    word_length = difficulty_levels[difficulty]["word_length"]
    attempts = difficulty_levels[difficulty]["attempts"]
    word = random.choice([word for word in word_list if len(word) == word_length])
    masked_word = ["_"] * word_length
    incorrect_guesses = 0
#intializing the loops
    while attempts > 0:
        print(" ".join(masked_word))
        guess = input("Guess a letter: ").lower()

        if guess in word:
            for i, letter in enumerate(word):
                if letter == guess:
                    masked_word[i] = guess
        else:
            attempts -= 1
            incorrect_guesses += 1
            print(f"Incorrect! {attempts} attempts remaining.")

        if "_" not in masked_word:
            print(" ".join(masked_word))
            print("Congratulations! You won!")
            return

    print(f"Game over! The word was {word}.")
    print(f"Your score: {attempts * 10 - incorrect_guesses * 5}")

# Leaderboard
def update_leaderboard(score):
    with open("leaderboard.txt", "a") as f:
        f.write(str(score) + "\n")
#defining the Leaderboard
def display_leaderboard():
    with open("leaderboard.txt", "r") as f:
        scores = [int(line.strip()) for line in f.readlines()]
        scores.sort(reverse=True)
        print("Leaderboard:")
        for i, score in enumerate(scores):
            print(f"{i+1}. {score}")

# Main function
def main():
    while True:
        play_game()
        update_leaderboard(attempts * 10 - incorrect_guesses * 5)
        display_leaderboard()
        play_again = input("Play again? (yes/no): ")
        if play_again.lower() != "yes":
            break

if __name__ == "__main__":
     main()































